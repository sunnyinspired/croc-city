{"ast":null,"code":"import _asyncToGenerator from \"/Users/nenisoft/Web_Projects/croc-city/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nenisoft/Web_Projects/croc-city/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nenisoft/Web_Projects/croc-city/frontend/src/admin/components/adminContext.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport axios from \"axios\";\nimport React, { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nvar AdminContext = createContext();\nexport var AdminContextProvider = function AdminContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(function () {\n    if (localStorage.getItem(\"authInfo\")) {\n      var _user = JSON.parse(localStorage.getItem(\"authInfo\"));\n\n      return _user.username;\n    }\n\n    return null;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n  /*   const [user, setUser] = useState(() => {\n      if (localStorage.getItem(\"authInfo\")) {\n        let user = JSON.parse(localStorage.getItem(\"authInfo\"));\n        return user.userData;\n      }\n      return null;\n    }); */\n\n  /* const refreshToken = async () => {\n    if (localStorage.getItem(\"authInfo\")) {\n      let tokens = JSON.parse(localStorage.getItem(\"authInfo\"));\n      let decoded =  jwt_decode(tokens.access_token);\n      const now = new Date().getTime()\n      if(now > decoded.exp * 1000){\n        let getToken = await axios.post(\"/api/get-token\",tokens.userData.admin_id);\n        \n        const response = {\n          access_token: getToken.data.access_token,\n          userData: {\n            admin_id:user.admin_id,\n            role_id: user.role_id,\n            username: user.username\n          }\n        }\n        localStorage.setItem(\"authInfo\",  JSON.stringify(response));\n        setToken(response)\n        \n      }\n    }\n    return null;\n  } */\n\n\n  var navigate = useNavigate();\n\n  var login = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload) {\n      var apiResponse, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"/api/login\", payload);\n\n            case 2:\n              apiResponse = _context.sent;\n\n              if (!(apiResponse.data.auth === true)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return axios.get(\"/api/authUser\");\n\n            case 6:\n              response = _context.sent;\n              localStorage.setItem(\"authInfo\", JSON.stringify(response.data.userData));\n              setUser(response.data.userData);\n              navigate(\"/admin/dashboard\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(AdminContext.Provider, {\n    value: {\n      user: user,\n      login: login\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default AdminContext;","map":{"version":3,"names":["axios","React","createContext","useState","useNavigate","AdminContext","AdminContextProvider","children","localStorage","getItem","user","JSON","parse","username","setUser","navigate","login","payload","post","apiResponse","data","auth","get","response","setItem","stringify","userData"],"sources":["/Users/nenisoft/Web_Projects/croc-city/frontend/src/admin/components/adminContext.js"],"sourcesContent":["import axios from \"axios\";\nimport React,{ createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n \nconst AdminContext = createContext();\n \nexport const AdminContextProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    if (localStorage.getItem(\"authInfo\")) {\n      let user = JSON.parse(localStorage.getItem(\"authInfo\"));\n      return user.username;\n    }\n    return null;\n  });\n\n/*   const [user, setUser] = useState(() => {\n    if (localStorage.getItem(\"authInfo\")) {\n      let user = JSON.parse(localStorage.getItem(\"authInfo\"));\n      return user.userData;\n    }\n    return null;\n  }); */\n\n  /* const refreshToken = async () => {\n    if (localStorage.getItem(\"authInfo\")) {\n      let tokens = JSON.parse(localStorage.getItem(\"authInfo\"));\n      let decoded =  jwt_decode(tokens.access_token);\n      const now = new Date().getTime()\n      if(now > decoded.exp * 1000){\n        let getToken = await axios.post(\"/api/get-token\",tokens.userData.admin_id);\n        \n        const response = {\n          access_token: getToken.data.access_token,\n          userData: {\n            admin_id:user.admin_id,\n            role_id: user.role_id,\n            username: user.username\n          }\n        }\n        localStorage.setItem(\"authInfo\",  JSON.stringify(response));\n        setToken(response)\n        \n      }\n    }\n    return null;\n  } */\n \n  const navigate = useNavigate();\n \n  const login = async (payload) => {\n    const apiResponse = await axios.post(\n      \"/api/login\",\n      payload\n    );\n    if(apiResponse.data.auth === true){\n      const response = await axios.get(\"/api/authUser\");\n      localStorage.setItem(\"authInfo\",  JSON.stringify(response.data.userData));\n    setUser(response.data.userData);\n    navigate(\"/admin/dashboard\");\n    }\n    \n  };\n  return (\n    <AdminContext.Provider value={{ user, login, }}>\n      {children}\n    </AdminContext.Provider>\n  );\n};\n \nexport default AdminContext;"],"mappings":";;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEA,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBAC5BJ,QAAQ,CAAC,YAAM;IACrC,IAAIK,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;MACpC,IAAIC,KAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAX;;MACA,OAAOC,KAAI,CAACG,QAAZ;IACD;;IACD,OAAO,IAAP;EACD,CAN+B,CADoB;EAAA;EAAA,IAC7CH,IAD6C;EAAA,IACvCI,OADuC;EAStD;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEE,IAAMC,QAAQ,GAAGX,WAAW,EAA5B;;EAEA,IAAMY,KAAK;IAAA,uEAAG,iBAAOC,OAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACcjB,KAAK,CAACkB,IAAN,CACxB,YADwB,EAExBD,OAFwB,CADd;;YAAA;cACNE,WADM;;cAAA,MAKTA,WAAW,CAACC,IAAZ,CAAiBC,IAAjB,KAA0B,IALjB;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAMarB,KAAK,CAACsB,GAAN,CAAU,eAAV,CANb;;YAAA;cAMJC,QANI;cAOVf,YAAY,CAACgB,OAAb,CAAqB,UAArB,EAAkCb,IAAI,CAACc,SAAL,CAAeF,QAAQ,CAACH,IAAT,CAAcM,QAA7B,CAAlC;cACFZ,OAAO,CAACS,QAAQ,CAACH,IAAT,CAAcM,QAAf,CAAP;cACAX,QAAQ,CAAC,kBAAD,CAAR;;YATY;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAALC,KAAK;MAAA;IAAA;EAAA,GAAX;;EAaA,oBACE,oBAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEN,IAAI,EAAJA,IAAF;MAAQM,KAAK,EAALA;IAAR,CAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGT,QADH,CADF;AAKD,CA7DM;AA+DP,eAAeF,YAAf"},"metadata":{},"sourceType":"module"}